grammar org.mde.spec.Spec with org.eclipse.xtext.common.Terminals

generate spec "http://www.mde.org/spec/Spec"

Model:
	commands+=Command*;
	
Command:
	OpenCommand
  | ClickCommand
  | StoreCommand
  | SelectCommand
  | RememberCommand
  | PropertyCommand
  | TypeCommand
  | SleepCommand
  | comment=SL_COMMENT
  | custom=CUSTOM_COMMAND
;

OpenCommand:
	{OpenCommand} "Open" STRING
  | "Open" var=Variable
;

//VariableOrValue:
//	var=[Variable]
//  | val=STRING
//  | element=ElementInScreen
//;

ClickCommand:
	cmd="Click"
  | "Click" "on" selector=Selector
  | "Click" "at" point=Point
;

SelectCommand:
	"Within" value=Selector
  | "Select" value=Selector
  | "Select" "visible" value=Selector
;

Selector:
	var=[Variable]
  |	str=STRING   
  | type=ElementType var=[Variable]
  | type=ElementType str=STRING
;

enum ElementType:
    button="button"
  | element="element"
  | link="link"
  | input="input"
  | textarea="textarea"
;

StoreCommand:
	"Store" name=ID "as" value=STRING
;

RememberCommand:
	"Remember" prop=Property "as" var=ID
;

PropertyCommand:
	"Property" prop=Property cond=Condition val=STRING
  | "Property" prop=Property cond=Condition var=[Variable]
;

Property:
    "text"
  | "class"
  | "value"
;

Condition:
	"should" "be"
  | "should" "not" "be"
;
	
TypeCommand:
	"Type" str=STRING
  | "Type" var=[Variable]
;

SleepCommand:
	"Sleep" "for" time=INT ("second" | "seconds")
;

Point:
	"{" INT "," INT "}"
;

ElementInScreen:
	element=ID
;

terminal CUSTOM_COMMAND:
	'!' !('\n'|'\r')* ('\r'? '\n')?
;

@Override
terminal SL_COMMENT:
    '#' !('\n'|'\r')* ('\r'? '\n')?
;

Variable:
	"$" name=ID
;