grammar org.mde.spec.Spec with org.eclipse.xtext.common.Terminals

generate spec "http://www.mde.org/spec/Spec"

Model:
	commands+=Command*;
	
Command:
	OpenCommand
  | ClickCommand
  | StoreCommand
  | SelectCommand
  | RememberCommand
  | PropertyCommand
  | TypeCommand
  | SleepCommand
  | comment=SL_COMMENT
  | custom=CUSTOM_COMMAND
;

OpenCommand:
	{OpenCommand} name="Open" (val=STRING | var=Variable)
;

ClickCommand:
	name="Click" ("on" selector=Selector | "at" point=Point)?
;

SelectCommand:
	name="Within" value=Selector
  | name="Select" ("visible")? value=Selector
;

Selector:
  (type=ElementType)? ("$"var=[Variable] | str=STRING)
;

enum ElementType:
    button="button"
  | element="element"
  | link="link"
  | input="input"
  | textarea="textarea"
;

StoreCommand:
	name="Store" var=Variable "as" val=STRING
;

RememberCommand:
	name="Remember" prop=Property "as" var=Variable
;

PropertyCommand:
	name="Property" prop=Property cond=Condition (val=STRING | "$"var=[Variable])
;

Property:
    "text"
  | "class"
  | "value"
;

Condition:
	"should" "be"
  | "should" "not" "be"
;
	
TypeCommand:
	name="Type" (str=STRING | var=[Variable])
;

SleepCommand:
	name="Sleep" "for" time=INT ("second" | "seconds")
;

Point:
	"{" INT "," INT "}"
;

terminal CUSTOM_COMMAND:
	'!' !('\n'|'\r')* ('\r'? '\n')?
;

@Override
terminal SL_COMMENT:
    '#' !('\n'|'\r')* ('\r'? '\n')?
;

Variable:
	"$" name=ID
;

LoopCommand:
	times=INT 'times' 'do'
	command += Command*
	'end'
;	
