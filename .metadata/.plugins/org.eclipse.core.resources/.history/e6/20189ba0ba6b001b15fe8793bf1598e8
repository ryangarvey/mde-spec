grammar org.mde.spec.Spec with org.eclipse.xtext.common.Terminals

generate spec "http://www.mde.org/spec/Spec"

Model:
	commands+=Command*;
	
Command:
	OpenCommand
  | ClickCommand
  | CommentCommand
  | SelectCommand
  | RememberCommand
  | PropertyCommand
  | TypeCommand
  | SleepCommand
  | CustomCommand
;

OpenCommand:
	"Open" value=Value
;

ClickCommand:
	"Click"
  | "Click" "on" value=Selector
  | "Click" "at" value=Point
;


CommentCommand:
	"#" STRING*
;

SelectCommand:
	"Within" value=Selector
  | "Select" value=Selector
  | "Select" "visible" value=Selector
;

RememberCommand:
	"Remember" prop=Property "as" var=Variable
;

PropertyCommand:
	"Property" prop=Property cond=Condition val=Value
;
	
TypeCommand:
	"Type" val=Value
;

SleepCommand:
	"Sleep" "for" time=INT ("second" | "seconds")
;

CustomCommand:
	"!" command=STRING
;

ElementType:
    "button"
  | "element"
  | "link"
  | "input"
  | "textarea"
;

Selector:
    val=STRING                
  | ElementType val=STRING
  | ElementType val=STRING
  | var=Variable                
  | ElementType val=Variable
;

Property:
	PropertyType
;

PropertyType:
    "text"
  | "class"
  | "value"
;

Value:
	val=Variable
  | val=StringValue
;

Condition:
	"should" "be"
  | "should" "not" "be"
;

Point:
	"{" INT "," INT "}"
;

Variable:
	"$" anyWord // fix this
;

anyWord:
	StringValue
;

StringValue:
	STRING
;


# Any word
anyWord -> [^\s]:+ {% function(d) {return d[0].join(""); } %}

# No quotes string
nqString -> [^\s\"\'\`\$]:+ {% function(d) {return d[0].join(""); } %}

# String value
stringValue ->
    btstring                {% function(d) {return {type: 'string', value: d[0]}} %}