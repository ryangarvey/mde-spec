/*
 * generated by Xtext 2.20.0
 */
package org.mde.spec.ui.quickfix

import org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider
import org.mde.spec.validation.SpecValidator
import org.eclipse.xtext.ui.editor.quickfix.Fix
import org.eclipse.xtext.validation.Issue
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor

/**
 * Custom quickfixes.
 *
 * See https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#quick-fixes
 */
class SpecQuickfixProvider extends DefaultQuickfixProvider {

	@Fix(SpecValidator.INVALID_NAME)
	def deCapitalizeName(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, 'Capitalize name', 'Capitalize the name.', 'upcase.png') [
			context |
			val xtextDocument = context.xtextDocument
			val firstLetter = xtextDocument.get(issue.offset, 1)
			xtextDocument.replace(issue.offset, 1, firstLetter.toLowerCase)
		]
	}
	
	@Fix(SpecValidator.INVALID_URL)
	def appendHTTPS(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, 'Fix URL', 'Add https://', 'upcase.png') [
			context |
			val xtextDocument = context.xtextDocument
			xtextDocument.getLineInformation(issue.lineNumber)
			xtextDocument.replace(issue.offset, 1, '''"https://''')
		]
	}
	
//	@Fix(SpecValidator.TOO_MANY_USING_COMMANDS)
//	def removeUsingCommands(Issue issue, IssueResolutionAcceptor acceptor) {
//		acceptor.accept(issue, 'Remove using commands', 'Delete all but the first using command', 'upcase.png') [
//			context |
//			val xtextDocument = context.xtextDocument
//			for (var i = xtextDocument.numberOfLines-1; i >= 0; i-=1) {
//				if (xtextDocument.getLineInformation(i).toString.contains("Using")) {
//					// TODO fix this
//				}
//			}	
//		]
//	}
}
