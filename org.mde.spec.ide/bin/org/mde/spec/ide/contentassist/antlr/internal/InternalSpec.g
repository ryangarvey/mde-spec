/*
 * generated by Xtext 2.20.0
 */
grammar InternalSpec;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.mde.spec.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.mde.spec.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.mde.spec.services.SpecGrammarAccess;

}
@parser::members {
	private SpecGrammarAccess grammarAccess;

	public void setGrammarAccess(SpecGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getCommandsAssignment()); }
		(rule__Model__CommandsAssignment)*
		{ after(grammarAccess.getModelAccess().getCommandsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommand
entryRuleCommand
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandAccess().getAlternatives()); }
		(rule__Command__Alternatives)
		{ after(grammarAccess.getCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpenCommand
entryRuleOpenCommand
:
{ before(grammarAccess.getOpenCommandRule()); }
	 ruleOpenCommand
{ after(grammarAccess.getOpenCommandRule()); } 
	 EOF 
;

// Rule OpenCommand
ruleOpenCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpenCommandAccess().getAlternatives()); }
		(rule__OpenCommand__Alternatives)
		{ after(grammarAccess.getOpenCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClickCommand
entryRuleClickCommand
:
{ before(grammarAccess.getClickCommandRule()); }
	 ruleClickCommand
{ after(grammarAccess.getClickCommandRule()); } 
	 EOF 
;

// Rule ClickCommand
ruleClickCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClickCommandAccess().getAlternatives()); }
		(rule__ClickCommand__Alternatives)
		{ after(grammarAccess.getClickCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectCommand
entryRuleSelectCommand
:
{ before(grammarAccess.getSelectCommandRule()); }
	 ruleSelectCommand
{ after(grammarAccess.getSelectCommandRule()); } 
	 EOF 
;

// Rule SelectCommand
ruleSelectCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectCommandAccess().getAlternatives()); }
		(rule__SelectCommand__Alternatives)
		{ after(grammarAccess.getSelectCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelector
entryRuleSelector
:
{ before(grammarAccess.getSelectorRule()); }
	 ruleSelector
{ after(grammarAccess.getSelectorRule()); } 
	 EOF 
;

// Rule Selector
ruleSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectorAccess().getAlternatives()); }
		(rule__Selector__Alternatives)
		{ after(grammarAccess.getSelectorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStoreCommand
entryRuleStoreCommand
:
{ before(grammarAccess.getStoreCommandRule()); }
	 ruleStoreCommand
{ after(grammarAccess.getStoreCommandRule()); } 
	 EOF 
;

// Rule StoreCommand
ruleStoreCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStoreCommandAccess().getGroup()); }
		(rule__StoreCommand__Group__0)
		{ after(grammarAccess.getStoreCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRememberCommand
entryRuleRememberCommand
:
{ before(grammarAccess.getRememberCommandRule()); }
	 ruleRememberCommand
{ after(grammarAccess.getRememberCommandRule()); } 
	 EOF 
;

// Rule RememberCommand
ruleRememberCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRememberCommandAccess().getGroup()); }
		(rule__RememberCommand__Group__0)
		{ after(grammarAccess.getRememberCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertyCommand
entryRulePropertyCommand
:
{ before(grammarAccess.getPropertyCommandRule()); }
	 rulePropertyCommand
{ after(grammarAccess.getPropertyCommandRule()); } 
	 EOF 
;

// Rule PropertyCommand
rulePropertyCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyCommandAccess().getAlternatives()); }
		(rule__PropertyCommand__Alternatives)
		{ after(grammarAccess.getPropertyCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperty
entryRuleProperty
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyAccess().getAlternatives()); }
		(rule__Property__Alternatives)
		{ after(grammarAccess.getPropertyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getAlternatives()); }
		(rule__Condition__Alternatives)
		{ after(grammarAccess.getConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeCommand
entryRuleTypeCommand
:
{ before(grammarAccess.getTypeCommandRule()); }
	 ruleTypeCommand
{ after(grammarAccess.getTypeCommandRule()); } 
	 EOF 
;

// Rule TypeCommand
ruleTypeCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeCommandAccess().getAlternatives()); }
		(rule__TypeCommand__Alternatives)
		{ after(grammarAccess.getTypeCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSleepCommand
entryRuleSleepCommand
:
{ before(grammarAccess.getSleepCommandRule()); }
	 ruleSleepCommand
{ after(grammarAccess.getSleepCommandRule()); } 
	 EOF 
;

// Rule SleepCommand
ruleSleepCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSleepCommandAccess().getGroup()); }
		(rule__SleepCommand__Group__0)
		{ after(grammarAccess.getSleepCommandAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePoint
entryRulePoint
:
{ before(grammarAccess.getPointRule()); }
	 rulePoint
{ after(grammarAccess.getPointRule()); } 
	 EOF 
;

// Rule Point
rulePoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointAccess().getGroup()); }
		(rule__Point__Group__0)
		{ after(grammarAccess.getPointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ElementType
ruleElementType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementTypeAccess().getAlternatives()); }
		(rule__ElementType__Alternatives)
		{ after(grammarAccess.getElementTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getOpenCommandParserRuleCall_0()); }
		ruleOpenCommand
		{ after(grammarAccess.getCommandAccess().getOpenCommandParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getClickCommandParserRuleCall_1()); }
		ruleClickCommand
		{ after(grammarAccess.getCommandAccess().getClickCommandParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getStoreCommandParserRuleCall_2()); }
		ruleStoreCommand
		{ after(grammarAccess.getCommandAccess().getStoreCommandParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getSelectCommandParserRuleCall_3()); }
		ruleSelectCommand
		{ after(grammarAccess.getCommandAccess().getSelectCommandParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getRememberCommandParserRuleCall_4()); }
		ruleRememberCommand
		{ after(grammarAccess.getCommandAccess().getRememberCommandParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getPropertyCommandParserRuleCall_5()); }
		rulePropertyCommand
		{ after(grammarAccess.getCommandAccess().getPropertyCommandParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getTypeCommandParserRuleCall_6()); }
		ruleTypeCommand
		{ after(grammarAccess.getCommandAccess().getTypeCommandParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getSleepCommandParserRuleCall_7()); }
		ruleSleepCommand
		{ after(grammarAccess.getCommandAccess().getSleepCommandParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getCommentAssignment_8()); }
		(rule__Command__CommentAssignment_8)
		{ after(grammarAccess.getCommandAccess().getCommentAssignment_8()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getCustomAssignment_9()); }
		(rule__Command__CustomAssignment_9)
		{ after(grammarAccess.getCommandAccess().getCustomAssignment_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenCommand__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpenCommandAccess().getGroup_0()); }
		(rule__OpenCommand__Group_0__0)
		{ after(grammarAccess.getOpenCommandAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpenCommandAccess().getGroup_1()); }
		(rule__OpenCommand__Group_1__0)
		{ after(grammarAccess.getOpenCommandAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClickCommand__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClickCommandAccess().getCmdAssignment_0()); }
		(rule__ClickCommand__CmdAssignment_0)
		{ after(grammarAccess.getClickCommandAccess().getCmdAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getClickCommandAccess().getGroup_1()); }
		(rule__ClickCommand__Group_1__0)
		{ after(grammarAccess.getClickCommandAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getClickCommandAccess().getGroup_2()); }
		(rule__ClickCommand__Group_2__0)
		{ after(grammarAccess.getClickCommandAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCommand__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectCommandAccess().getGroup_0()); }
		(rule__SelectCommand__Group_0__0)
		{ after(grammarAccess.getSelectCommandAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectCommandAccess().getGroup_1()); }
		(rule__SelectCommand__Group_1__0)
		{ after(grammarAccess.getSelectCommandAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getSelectCommandAccess().getGroup_2()); }
		(rule__SelectCommand__Group_2__0)
		{ after(grammarAccess.getSelectCommandAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getVarAssignment_0()); }
		(rule__Selector__VarAssignment_0)
		{ after(grammarAccess.getSelectorAccess().getVarAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectorAccess().getStrAssignment_1()); }
		(rule__Selector__StrAssignment_1)
		{ after(grammarAccess.getSelectorAccess().getStrAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getSelectorAccess().getGroup_2()); }
		(rule__Selector__Group_2__0)
		{ after(grammarAccess.getSelectorAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getSelectorAccess().getGroup_3()); }
		(rule__Selector__Group_3__0)
		{ after(grammarAccess.getSelectorAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCommand__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyCommandAccess().getGroup_0()); }
		(rule__PropertyCommand__Group_0__0)
		{ after(grammarAccess.getPropertyCommandAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyCommandAccess().getGroup_1()); }
		(rule__PropertyCommand__Group_1__0)
		{ after(grammarAccess.getPropertyCommandAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getTextKeyword_0()); }
		'text'
		{ after(grammarAccess.getPropertyAccess().getTextKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getClassKeyword_1()); }
		'class'
		{ after(grammarAccess.getPropertyAccess().getClassKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getValueKeyword_2()); }
		'value'
		{ after(grammarAccess.getPropertyAccess().getValueKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getGroup_0()); }
		(rule__Condition__Group_0__0)
		{ after(grammarAccess.getConditionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getGroup_1()); }
		(rule__Condition__Group_1__0)
		{ after(grammarAccess.getConditionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCommand__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeCommandAccess().getGroup_0()); }
		(rule__TypeCommand__Group_0__0)
		{ after(grammarAccess.getTypeCommandAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeCommandAccess().getGroup_1()); }
		(rule__TypeCommand__Group_1__0)
		{ after(grammarAccess.getTypeCommandAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SleepCommand__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSleepCommandAccess().getSecondKeyword_3_0()); }
		'second'
		{ after(grammarAccess.getSleepCommandAccess().getSecondKeyword_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getSleepCommandAccess().getSecondsKeyword_3_1()); }
		'seconds'
		{ after(grammarAccess.getSleepCommandAccess().getSecondsKeyword_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementTypeAccess().getButtonEnumLiteralDeclaration_0()); }
		('button')
		{ after(grammarAccess.getElementTypeAccess().getButtonEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementTypeAccess().getElementEnumLiteralDeclaration_1()); }
		('element')
		{ after(grammarAccess.getElementTypeAccess().getElementEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementTypeAccess().getLinkEnumLiteralDeclaration_2()); }
		('link')
		{ after(grammarAccess.getElementTypeAccess().getLinkEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getElementTypeAccess().getInputEnumLiteralDeclaration_3()); }
		('input')
		{ after(grammarAccess.getElementTypeAccess().getInputEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getElementTypeAccess().getTextareaEnumLiteralDeclaration_4()); }
		('textarea')
		{ after(grammarAccess.getElementTypeAccess().getTextareaEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenCommand__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenCommand__Group_0__0__Impl
	rule__OpenCommand__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenCommand__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenCommandAccess().getOpenCommandAction_0_0()); }
	()
	{ after(grammarAccess.getOpenCommandAccess().getOpenCommandAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenCommand__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenCommand__Group_0__1__Impl
	rule__OpenCommand__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenCommand__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenCommandAccess().getOpenKeyword_0_1()); }
	'Open'
	{ after(grammarAccess.getOpenCommandAccess().getOpenKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenCommand__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenCommand__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenCommand__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenCommandAccess().getSTRINGTerminalRuleCall_0_2()); }
	RULE_STRING
	{ after(grammarAccess.getOpenCommandAccess().getSTRINGTerminalRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OpenCommand__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenCommand__Group_1__0__Impl
	rule__OpenCommand__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenCommand__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenCommandAccess().getOpenKeyword_1_0()); }
	'Open'
	{ after(grammarAccess.getOpenCommandAccess().getOpenKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenCommand__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenCommand__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenCommand__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenCommandAccess().getVarAssignment_1_1()); }
	(rule__OpenCommand__VarAssignment_1_1)
	{ after(grammarAccess.getOpenCommandAccess().getVarAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClickCommand__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClickCommand__Group_1__0__Impl
	rule__ClickCommand__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClickCommand__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClickCommandAccess().getClickKeyword_1_0()); }
	'Click'
	{ after(grammarAccess.getClickCommandAccess().getClickKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClickCommand__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClickCommand__Group_1__1__Impl
	rule__ClickCommand__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClickCommand__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClickCommandAccess().getOnKeyword_1_1()); }
	'on'
	{ after(grammarAccess.getClickCommandAccess().getOnKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClickCommand__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClickCommand__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClickCommand__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClickCommandAccess().getSelectorAssignment_1_2()); }
	(rule__ClickCommand__SelectorAssignment_1_2)
	{ after(grammarAccess.getClickCommandAccess().getSelectorAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClickCommand__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClickCommand__Group_2__0__Impl
	rule__ClickCommand__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClickCommand__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClickCommandAccess().getClickKeyword_2_0()); }
	'Click'
	{ after(grammarAccess.getClickCommandAccess().getClickKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClickCommand__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClickCommand__Group_2__1__Impl
	rule__ClickCommand__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClickCommand__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClickCommandAccess().getAtKeyword_2_1()); }
	'at'
	{ after(grammarAccess.getClickCommandAccess().getAtKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClickCommand__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClickCommand__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClickCommand__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClickCommandAccess().getPointAssignment_2_2()); }
	(rule__ClickCommand__PointAssignment_2_2)
	{ after(grammarAccess.getClickCommandAccess().getPointAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCommand__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectCommand__Group_0__0__Impl
	rule__SelectCommand__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCommand__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectCommandAccess().getWithinKeyword_0_0()); }
	'Within'
	{ after(grammarAccess.getSelectCommandAccess().getWithinKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCommand__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectCommand__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCommand__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectCommandAccess().getValueAssignment_0_1()); }
	(rule__SelectCommand__ValueAssignment_0_1)
	{ after(grammarAccess.getSelectCommandAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCommand__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectCommand__Group_1__0__Impl
	rule__SelectCommand__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCommand__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectCommandAccess().getSelectKeyword_1_0()); }
	'Select'
	{ after(grammarAccess.getSelectCommandAccess().getSelectKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCommand__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectCommand__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCommand__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectCommandAccess().getValueAssignment_1_1()); }
	(rule__SelectCommand__ValueAssignment_1_1)
	{ after(grammarAccess.getSelectCommandAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCommand__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectCommand__Group_2__0__Impl
	rule__SelectCommand__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCommand__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectCommandAccess().getSelectKeyword_2_0()); }
	'Select'
	{ after(grammarAccess.getSelectCommandAccess().getSelectKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCommand__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectCommand__Group_2__1__Impl
	rule__SelectCommand__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCommand__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectCommandAccess().getVisibleKeyword_2_1()); }
	'visible'
	{ after(grammarAccess.getSelectCommandAccess().getVisibleKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCommand__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectCommand__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCommand__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectCommandAccess().getValueAssignment_2_2()); }
	(rule__SelectCommand__ValueAssignment_2_2)
	{ after(grammarAccess.getSelectCommandAccess().getValueAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_2__0__Impl
	rule__Selector__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getTypeAssignment_2_0()); }
	(rule__Selector__TypeAssignment_2_0)
	{ after(grammarAccess.getSelectorAccess().getTypeAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getVarAssignment_2_1()); }
	(rule__Selector__VarAssignment_2_1)
	{ after(grammarAccess.getSelectorAccess().getVarAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_3__0__Impl
	rule__Selector__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getTypeAssignment_3_0()); }
	(rule__Selector__TypeAssignment_3_0)
	{ after(grammarAccess.getSelectorAccess().getTypeAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getStrAssignment_3_1()); }
	(rule__Selector__StrAssignment_3_1)
	{ after(grammarAccess.getSelectorAccess().getStrAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StoreCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoreCommand__Group__0__Impl
	rule__StoreCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreCommandAccess().getStoreKeyword_0()); }
	'Store'
	{ after(grammarAccess.getStoreCommandAccess().getStoreKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoreCommand__Group__1__Impl
	rule__StoreCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreCommandAccess().getNameAssignment_1()); }
	(rule__StoreCommand__NameAssignment_1)
	{ after(grammarAccess.getStoreCommandAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoreCommand__Group__2__Impl
	rule__StoreCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreCommandAccess().getAsKeyword_2()); }
	'as'
	{ after(grammarAccess.getStoreCommandAccess().getAsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StoreCommand__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreCommandAccess().getValueAssignment_3()); }
	(rule__StoreCommand__ValueAssignment_3)
	{ after(grammarAccess.getStoreCommandAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RememberCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RememberCommand__Group__0__Impl
	rule__RememberCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RememberCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRememberCommandAccess().getRememberKeyword_0()); }
	'Remember'
	{ after(grammarAccess.getRememberCommandAccess().getRememberKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RememberCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RememberCommand__Group__1__Impl
	rule__RememberCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RememberCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRememberCommandAccess().getPropAssignment_1()); }
	(rule__RememberCommand__PropAssignment_1)
	{ after(grammarAccess.getRememberCommandAccess().getPropAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RememberCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RememberCommand__Group__2__Impl
	rule__RememberCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RememberCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRememberCommandAccess().getAsKeyword_2()); }
	'as'
	{ after(grammarAccess.getRememberCommandAccess().getAsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RememberCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RememberCommand__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RememberCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRememberCommandAccess().getVarAssignment_3()); }
	(rule__RememberCommand__VarAssignment_3)
	{ after(grammarAccess.getRememberCommandAccess().getVarAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyCommand__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyCommand__Group_0__0__Impl
	rule__PropertyCommand__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCommand__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyCommandAccess().getPropertyKeyword_0_0()); }
	'Property'
	{ after(grammarAccess.getPropertyCommandAccess().getPropertyKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCommand__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyCommand__Group_0__1__Impl
	rule__PropertyCommand__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCommand__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyCommandAccess().getPropAssignment_0_1()); }
	(rule__PropertyCommand__PropAssignment_0_1)
	{ after(grammarAccess.getPropertyCommandAccess().getPropAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCommand__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyCommand__Group_0__2__Impl
	rule__PropertyCommand__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCommand__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyCommandAccess().getCondAssignment_0_2()); }
	(rule__PropertyCommand__CondAssignment_0_2)
	{ after(grammarAccess.getPropertyCommandAccess().getCondAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCommand__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyCommand__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCommand__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyCommandAccess().getValAssignment_0_3()); }
	(rule__PropertyCommand__ValAssignment_0_3)
	{ after(grammarAccess.getPropertyCommandAccess().getValAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyCommand__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyCommand__Group_1__0__Impl
	rule__PropertyCommand__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCommand__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyCommandAccess().getPropertyKeyword_1_0()); }
	'Property'
	{ after(grammarAccess.getPropertyCommandAccess().getPropertyKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCommand__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyCommand__Group_1__1__Impl
	rule__PropertyCommand__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCommand__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyCommandAccess().getPropAssignment_1_1()); }
	(rule__PropertyCommand__PropAssignment_1_1)
	{ after(grammarAccess.getPropertyCommandAccess().getPropAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCommand__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyCommand__Group_1__2__Impl
	rule__PropertyCommand__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCommand__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyCommandAccess().getCondAssignment_1_2()); }
	(rule__PropertyCommand__CondAssignment_1_2)
	{ after(grammarAccess.getPropertyCommandAccess().getCondAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCommand__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyCommand__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCommand__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyCommandAccess().getVarAssignment_1_3()); }
	(rule__PropertyCommand__VarAssignment_1_3)
	{ after(grammarAccess.getPropertyCommandAccess().getVarAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__0__Impl
	rule__Condition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getShouldKeyword_0_0()); }
	'should'
	{ after(grammarAccess.getConditionAccess().getShouldKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getBeKeyword_0_1()); }
	'be'
	{ after(grammarAccess.getConditionAccess().getBeKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__0__Impl
	rule__Condition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getShouldKeyword_1_0()); }
	'should'
	{ after(grammarAccess.getConditionAccess().getShouldKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__1__Impl
	rule__Condition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getNotKeyword_1_1()); }
	'not'
	{ after(grammarAccess.getConditionAccess().getNotKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getBeKeyword_1_2()); }
	'be'
	{ after(grammarAccess.getConditionAccess().getBeKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeCommand__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeCommand__Group_0__0__Impl
	rule__TypeCommand__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCommand__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeCommandAccess().getTypeKeyword_0_0()); }
	'Type'
	{ after(grammarAccess.getTypeCommandAccess().getTypeKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCommand__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeCommand__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCommand__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeCommandAccess().getStrAssignment_0_1()); }
	(rule__TypeCommand__StrAssignment_0_1)
	{ after(grammarAccess.getTypeCommandAccess().getStrAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeCommand__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeCommand__Group_1__0__Impl
	rule__TypeCommand__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCommand__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeCommandAccess().getTypeKeyword_1_0()); }
	'Type'
	{ after(grammarAccess.getTypeCommandAccess().getTypeKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCommand__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeCommand__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCommand__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeCommandAccess().getVarAssignment_1_1()); }
	(rule__TypeCommand__VarAssignment_1_1)
	{ after(grammarAccess.getTypeCommandAccess().getVarAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SleepCommand__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SleepCommand__Group__0__Impl
	rule__SleepCommand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SleepCommand__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSleepCommandAccess().getSleepKeyword_0()); }
	'Sleep'
	{ after(grammarAccess.getSleepCommandAccess().getSleepKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SleepCommand__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SleepCommand__Group__1__Impl
	rule__SleepCommand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SleepCommand__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSleepCommandAccess().getForKeyword_1()); }
	'for'
	{ after(grammarAccess.getSleepCommandAccess().getForKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SleepCommand__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SleepCommand__Group__2__Impl
	rule__SleepCommand__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SleepCommand__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSleepCommandAccess().getTimeAssignment_2()); }
	(rule__SleepCommand__TimeAssignment_2)
	{ after(grammarAccess.getSleepCommandAccess().getTimeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SleepCommand__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SleepCommand__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SleepCommand__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSleepCommandAccess().getAlternatives_3()); }
	(rule__SleepCommand__Alternatives_3)
	{ after(grammarAccess.getSleepCommandAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Point__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__0__Impl
	rule__Point__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getPointAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__1__Impl
	rule__Point__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getPointAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__2__Impl
	rule__Point__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getPointAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__3__Impl
	rule__Point__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getINTTerminalRuleCall_3()); }
	RULE_INT
	{ after(grammarAccess.getPointAccess().getINTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getPointAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getDollarSignKeyword_0()); }
	'$'
	{ after(grammarAccess.getVariableAccess().getDollarSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNameAssignment_1()); }
	(rule__Variable__NameAssignment_1)
	{ after(grammarAccess.getVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__CommandsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getCommandsCommandParserRuleCall_0()); }
		ruleCommand
		{ after(grammarAccess.getModelAccess().getCommandsCommandParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__CommentAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getCommentSL_COMMENTTerminalRuleCall_8_0()); }
		RULE_SL_COMMENT
		{ after(grammarAccess.getCommandAccess().getCommentSL_COMMENTTerminalRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__CustomAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getCustomCUSTOM_COMMANDTerminalRuleCall_9_0()); }
		RULE_CUSTOM_COMMAND
		{ after(grammarAccess.getCommandAccess().getCustomCUSTOM_COMMANDTerminalRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenCommand__VarAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpenCommandAccess().getVarVariableParserRuleCall_1_1_0()); }
		ruleVariable
		{ after(grammarAccess.getOpenCommandAccess().getVarVariableParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClickCommand__CmdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClickCommandAccess().getCmdClickKeyword_0_0()); }
		(
			{ before(grammarAccess.getClickCommandAccess().getCmdClickKeyword_0_0()); }
			'Click'
			{ after(grammarAccess.getClickCommandAccess().getCmdClickKeyword_0_0()); }
		)
		{ after(grammarAccess.getClickCommandAccess().getCmdClickKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClickCommand__SelectorAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClickCommandAccess().getSelectorSelectorParserRuleCall_1_2_0()); }
		ruleSelector
		{ after(grammarAccess.getClickCommandAccess().getSelectorSelectorParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClickCommand__PointAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClickCommandAccess().getPointPointParserRuleCall_2_2_0()); }
		rulePoint
		{ after(grammarAccess.getClickCommandAccess().getPointPointParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCommand__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectCommandAccess().getValueSelectorParserRuleCall_0_1_0()); }
		ruleSelector
		{ after(grammarAccess.getSelectCommandAccess().getValueSelectorParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCommand__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectCommandAccess().getValueSelectorParserRuleCall_1_1_0()); }
		ruleSelector
		{ after(grammarAccess.getSelectCommandAccess().getValueSelectorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCommand__ValueAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectCommandAccess().getValueSelectorParserRuleCall_2_2_0()); }
		ruleSelector
		{ after(grammarAccess.getSelectCommandAccess().getValueSelectorParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__VarAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getVarVariableCrossReference_0_0()); }
		(
			{ before(grammarAccess.getSelectorAccess().getVarVariableIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSelectorAccess().getVarVariableIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getSelectorAccess().getVarVariableCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__StrAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getStrSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getSelectorAccess().getStrSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__TypeAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getTypeElementTypeEnumRuleCall_2_0_0()); }
		ruleElementType
		{ after(grammarAccess.getSelectorAccess().getTypeElementTypeEnumRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__VarAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getVarVariableCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getSelectorAccess().getVarVariableIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSelectorAccess().getVarVariableIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getSelectorAccess().getVarVariableCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__TypeAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getTypeElementTypeEnumRuleCall_3_0_0()); }
		ruleElementType
		{ after(grammarAccess.getSelectorAccess().getTypeElementTypeEnumRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__StrAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getStrSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getSelectorAccess().getStrSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreCommand__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoreCommandAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStoreCommandAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StoreCommand__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoreCommandAccess().getValueSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getStoreCommandAccess().getValueSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RememberCommand__PropAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRememberCommandAccess().getPropPropertyParserRuleCall_1_0()); }
		ruleProperty
		{ after(grammarAccess.getRememberCommandAccess().getPropPropertyParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RememberCommand__VarAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRememberCommandAccess().getVarIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getRememberCommandAccess().getVarIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCommand__PropAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyCommandAccess().getPropPropertyParserRuleCall_0_1_0()); }
		ruleProperty
		{ after(grammarAccess.getPropertyCommandAccess().getPropPropertyParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCommand__CondAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyCommandAccess().getCondConditionParserRuleCall_0_2_0()); }
		ruleCondition
		{ after(grammarAccess.getPropertyCommandAccess().getCondConditionParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCommand__ValAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyCommandAccess().getValSTRINGTerminalRuleCall_0_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getPropertyCommandAccess().getValSTRINGTerminalRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCommand__PropAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyCommandAccess().getPropPropertyParserRuleCall_1_1_0()); }
		ruleProperty
		{ after(grammarAccess.getPropertyCommandAccess().getPropPropertyParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCommand__CondAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyCommandAccess().getCondConditionParserRuleCall_1_2_0()); }
		ruleCondition
		{ after(grammarAccess.getPropertyCommandAccess().getCondConditionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyCommand__VarAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyCommandAccess().getVarVariableCrossReference_1_3_0()); }
		(
			{ before(grammarAccess.getPropertyCommandAccess().getVarVariableIDTerminalRuleCall_1_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPropertyCommandAccess().getVarVariableIDTerminalRuleCall_1_3_0_1()); }
		)
		{ after(grammarAccess.getPropertyCommandAccess().getVarVariableCrossReference_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCommand__StrAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeCommandAccess().getStrSTRINGTerminalRuleCall_0_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTypeCommandAccess().getStrSTRINGTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeCommand__VarAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeCommandAccess().getVarVariableCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getTypeCommandAccess().getVarVariableIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTypeCommandAccess().getVarVariableIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getTypeCommandAccess().getVarVariableCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SleepCommand__TimeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSleepCommandAccess().getTimeINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getSleepCommandAccess().getTimeINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_CUSTOM_COMMAND : '!' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
